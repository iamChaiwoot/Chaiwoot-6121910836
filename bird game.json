[{"id":"f2ecb8e1.6e31e","type":"ui_template","z":"e025233d.a15968","group":"369a666e.68c4d2","name":"","order":0,"width":0,"height":0,"format":"<h3>Testing template</h3>\n<p>{{msg.payload}}</p>\n\n     <canvas id=\"c\" width=\"500\" height=\"500\">\n\n     </canvas>\n     \n<script>\n(function() {\n    var count = 0\n    function testit(msg,scope) {\n        count = count+1;\n        console.log(\"In testit \" + msg.payload + \"  count = \" + count);\n        // scope.send({payload: \"from testit \" + msg.payload + \"  count = \" + count});\n    }\n    \n \n    \n    (function(scope) {\n        // scope.send({payload: \"preload\"});   // this gets sent when the view is opened in the browser\n        \n        context = c.getContext('2d');\n         const bird = new Image();\n        //  bird.src = \"https://i.dlpng.com/static/png/6682987_preview.png\";\n         bird.src = \"https://www.pinclipart.com/picdir/big/89-893608_flying-clip-art.png\";\n         birdX = birdDY = score = bestScore = 0;\n         birdSize = 100;\n         pipeWidth = topPipeBottomY = 50;\n         interval = 25;\n         birdY = pipeGap = 200;\n         canvasSize = pipeX = 500;\n         c.onclick = () => {birdDY = 8}\n         setInterval(() => {\n             context.fillStyle = \"skyblue\";\n             context.fillRect(0,0,canvasSize,canvasSize); //Sky\n             birdY -= birdDY -= 0.5;   // Gravity\n             context.drawImage(bird,birdX,birdY,birdSize,birdSize); // Bird\n             context.fillStyle = \"brown\";\n             pipeX -= 10; // Move pipe\n             pipeX < -pipeWidth && ((pipeX = canvasSize),(topPipeBottomY = pipeGap * Math.random()));\n             context.fillRect(pipeX, 0 , pipeWidth,topPipeBottomY);\n             context.fillRect(pipeX, topPipeBottomY + pipeGap , pipeWidth, canvasSize);\n             context.fillStyle = \"black\";\n             context.fillText(score++,10,15);\n             bestScore = bestScore < score ? score : bestScore;\n             context.fillText(`Best: ${bestScore}`,10,25);\n             (((birdY < topPipeBottomY || birdY > topPipeBottomY + pipeGap)&& pipeX < birdSize) //Hit pipe\n             || birdY > canvasSize)&& //fall\n             ((birdDY = 0),(birdY = 200),(pipeX = canvasSize),(scope.send({payload: \"Score: \"+score+\" Best: \"+bestScore})) ,(score = 0));\n\n         },interval);\n        \n        \n        scope.$watch('msg', function(msg) {\n            if (msg) {\n                testit(msg, scope);\n            }\n        });\n    })(scope);\n})();\n</script>\n\n\n","storeOutMessages":false,"fwdInMessages":false,"resendOnRefresh":false,"templateScope":"local","x":495,"y":475.4666748046875,"wires":[["c9f38e96.8700a8"]]},{"id":"369a666e.68c4d2","type":"ui_group","name":"Group 2","tab":"99871d47.1cb44","order":2,"disp":true,"width":"10","collapse":false},{"id":"99871d47.1cb44","type":"ui_tab","name":"bird","icon":"dashboard","disabled":false,"hidden":false}]